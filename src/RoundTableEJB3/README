This application illustrates using EJB3 entity beans as your Grails domain
classes. For a complete end-to-end tutorial, check out
http://www.infoq.com/articles/grails-ejb-tutorial.

-This application uses a MySQL database named round_table_unconventional_dev.
See the README_MYSQL file for details on setting up that database schema.

-You may need to execute `grails upgrade` prior to running the app or running
the tests.

-Areas of Interest

--One-to-many relationships -- Check out the domain classes in src/java/. In
there you'll find the Knight and Sword domain classes, implemented as EJB3
entity beans. Knights have many swords, and swords belong to knights.

--Constraints -- With EJB3 entity beans in Grails, observe that we must declare
any constraints in a Groovy script that lives adjacent to the domain class
definition.

--Hibernate Mapping File -- Have a look at the file in the hibernate directory.
When using EJB3 entity beans as your domain classes, you need to register them
in this hibernate.cfg.xml file.
